---
- name: Dracut targets
  hosts: all
  become: true
  tasks:
    - name: Find the latest installed kernel for dracut
      ansible.builtin.find:
        paths: /boot
        patterns: "vmlinuz-*"
        file_type: file
        use_regex: true
      register: installed_kernels
    
    - name: Determine kernel version for dracut based on latest vmlinuz
    # Assuming the latest vmlinuz is the one to use for dracut.
    # This might need refinement if there's a more robust way to get the *target* kernel post-upgrade.
      ansible.builtin.set_fact:
        kernel_for_dracut: "{{ installed_kernels.files | sort(attribute='path', reverse=true) | map(attribute='path') | first | regex_replace('.*vmlinuz-(.*)', '\\1') }}"
      when: installed_kernels.files | length > 0

    - name: Execute dracut for the detected kernel ({{ kernel_for_dracut }})
      ansible.builtin.command: "dracut -f /boot/initramfs-{{ kernel_for_dracut }}.img {{ kernel_for_dracut }}"
      changed_when: true
      when: kernel_for_dracut is defined
    
    # NEW TASK: Execute zipl only on IBM Z (s390x) systems
    - name: Execute zipl for IBM Z systems
      ansible.builtin.command: zipl
      changed_when: true
      when: ansible_architecture == 's390x' # Execute only if architecture is s390x
      tags:
        - reboot # Tag it with reboot, as it's part of the boot process updates
        - zipl_update