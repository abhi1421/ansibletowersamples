---
# tasks file for audit_system_updates
- name: Create timestamp
  ansible.builtin.set_fact:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"

- name: Ensure output directory exists
  ansible.builtin.file:
    path: /var/tmp/system_update_audit
    state: directory
    mode: '0755'

- name: Get installed packages (name, version-release, install time)
  ansible.builtin.command: >
    rpm -qa --qf '%{name} %{version}-%{release} %{installtime:date}\n'
  register: installed_packages
  changed_when: false

- name: Get list of available updates
  ansible.builtin.command: yum list updates -q
  register: available_updates
  changed_when: false

- name: Save installed packages to temporary file
  ansible.builtin.copy:
    content: "{{ installed_packages.stdout }}"
    dest: "/var/tmp/system_update_audit/installed_pkgs_{{ timestamp }}.txt"
    mode: '0644'

- name: Save available updates to temporary file
  ansible.builtin.copy:
    content: "{{ available_updates.stdout }}"
    dest: "/var/tmp/system_update_audit/available_updates_{{ timestamp }}.txt"
    mode: '0644'

- name: Generate formatted audit report using shell
  ansible.builtin.shell: |
    awk 'NR>0 {installed[$1]=$2" "$3}' /var/tmp/system_update_audit/installed_pkgs_{{ timestamp }}.txt
    awk 'NR>2 {updates[$1]=$2}' /var/tmp/system_update_audit/available_updates_{{ timestamp }}.txt
    printf "Package Name | Installed Version | Installed On        | Update Available\n"
    printf "-------------|-------------------|----------------------|-----------------\n"
    for pkg in "${!installed[@]}"; do
      version_and_date=${installed[$pkg]}
      version=$(echo $version_and_date | awk '{print $1}')
      date=$(echo $version_and_date | awk '{print $2, $3, $4, $5, $6}')
      update=${updates[$pkg]:-none}
      printf "%-13s | %-17s | %-20s | %s\n" "$pkg" "$version" "$date" "$update"
    done > /var/tmp/system_update_audit/system_update_audit_{{ timestamp }}.txt
  args:
    executable: /bin/bash
  changed_when: false
