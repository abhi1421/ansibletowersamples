---
- name: Ensure acl package is installed
  ansible.builtin.package:
    name: acl
    state: present
  become: true

- name: Gather users with UID 0 (root)
  ansible.builtin.shell: "awk -F':' '$3 == 0 {print $1}' /etc/passwd"
  register: uid0_users

- name: Gather users allowed in sudoers (sudo group members)
  ansible.builtin.shell: "getent group sudo wheel | awk -F':' '{print $4}' | tr ',' '\\n'"
  register: sudo_group_users
  failed_when: false  # in some distros group sudo or wheel may not exist

- name: Combine sudo/root users into a list
  set_fact:
    privileged_users: "{{ (uid0_users.stdout_lines + (sudo_group_users.stdout_lines | default([]))) | unique }}"

- name: Get sudoers file stat
  ansible.builtin.stat:
    path: /etc/sudoers
  register: sudoers_file

- name: Get /etc/sudoers.d directory stat
  ansible.builtin.stat:
    path: /etc/sudoers.d
  register: sudoers_d_dir
  failed_when: false

- name: Prepare user info list
  set_fact:
    privileged_users_info: []

- name: Loop over privileged users to get home and ssh key info
  vars:
    user_name: "{{ item }}"
  block:
    - name: Get home directory of user {{ item }}
      ansible.builtin.shell: "getent passwd {{ item }} | cut -d: -f6"
      register: home_dir

    - name: Check if .ssh/authorized_keys exists for user {{ item }}
      ansible.builtin.stat:
        path: "{{ home_dir.stdout }}/.ssh/authorized_keys"
      register: ssh_auth_keys
      failed_when: false

    - name: Append user info
      set_fact:
        privileged_users_info: >-
          {{ privileged_users_info + [{
            'user': item,
            'home': home_dir.stdout,
            'ssh_auth_keys_exists': ssh_auth_keys.stat.exists | default(false),
            'ssh_auth_keys_mode': ssh_auth_keys.stat.mode | default('N/A'),
            'ssh_auth_keys_owner': ssh_auth_keys.stat.pw_name | default('N/A'),
            'ssh_auth_keys_group': ssh_auth_keys.stat.gr_name | default('N/A')
          }] }}
  loop: "{{ privileged_users }}"

- name: Assemble audit report file
  ansible.builtin.template:
    src: report.j2
    dest: /tmp/privileged_access_report.txt
  vars:
    sudoers_file_stat: "{{ sudoers_file.stat }}"
    sudoers_d_stat: "{{ sudoers_d_dir.stat | default({}) }}"
    privileged_users_info: "{{ privileged_users_info }}"
