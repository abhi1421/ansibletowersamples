# privileged_access_audit/tasks/check_user_privileges.yml
---
- name: DEBUG - Final check of home directory value for {{ current_user }}
  ansible.builtin.debug:
    msg: "Value of user_home_dirs['{{ current_user }}'] is: '{{ user_home_dirs[current_user] }}'"
  when: current_user == 'root' # Focus on root, as it's the user that fails consistently

# NEW TASK: Ensure .ssh directory exists for the current user
- name: Ensure .ssh directory exists for {{ current_user }}
  ansible.builtin.file:
    path: "{{ user_home_dirs[current_user] }}/.ssh"
    state: directory
    mode: '0700' # Standard secure permissions for .ssh directory (owner rwx, others no access)
    owner: "{{ current_user }}"
    # For root user, group is typically 'root'. For others, often same as username.
    # Use ternary operator to handle root specially.
    group: "{{ (current_user == 'root') | ternary('root', current_user) }}"
  become: yes # This task requires root privileges to create directories for other users or in /root
  when:
    # Only attempt to create if user_home_dirs is valid and not empty
    - user_home_dirs[current_user] is defined
    - user_home_dirs[current_user] is string
    - user_home_dirs[current_user] | length > 0
    - user_home_dirs[current_user].startswith('/')

# ... (rest of your check_user_privileges.yml remains unchanged from the last provided full version)