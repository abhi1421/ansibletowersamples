# privileged_access_audit/tasks/check_user_privileges.yml
---
- name: Stat authorized_keys file for {{ current_user }}
  ansible.builtin.stat:
    path: "{{ user_home_dirs[current_user] }}/.ssh/authorized_keys"
  register: auth_keys_stat

- name: Read authorized_keys content if it exists for {{ current_user }}
  ansible.builtin.slurp:
    src: "{{ user_home_dirs[current_user] }}/.ssh/authorized_keys"
  register: auth_keys_content
  when: auth_keys_stat.stat.exists and auth_keys_stat.stat.isreg

- name: Add authorized_keys for {{ current_user }} to report
  ansible.builtin.set_fact:
    privileged_report_data:
      authorized_keys: "{{ privileged_report_data.authorized_keys + [ { 'user': current_user, 'path': user_home_dirs[current_user] + '/.ssh/authorized_keys', 'content': (auth_keys_content.content | default('') | b64decode) if auth_keys_content is defined and auth_keys_content.content is defined else 'N/A', 'permissions': auth_keys_stat.stat.mode | default('N/A'), 'owner': auth_keys_stat.stat.pw_name | default('N/A'), 'group': auth_keys_stat.stat.gr_name | default('N/A') } ] }}"
  when: auth_keys_stat.stat.exists