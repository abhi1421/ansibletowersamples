---
- name: Ensure controller host dir exists
  delegate_to: localhost
  file:
    path: "{{ controller_snapshot_root }}/{{ inventory_hostname }}"
    state: directory
    mode: "0750"

- name: Determine current and previous snapshot paths
  delegate_to: localhost
  set_fact:
    _cur_path: "{{ controller_snapshot_root }}/{{ inventory_hostname }}/process_snapshot_{{ ansible_date_time.date }}.json"
    _glob_all: "{{ lookup('ansible.builtin.fileglob', controller_snapshot_root ~ '/' ~ inventory_hostname ~ '/process_snapshot_*.json') | sort }}"
  run_once: false

- name: Pick previous snapshot path if exists
  delegate_to: localhost
  set_fact:
    _prev_path: "{{ (_glob_all | length) > 1 | ternary((_glob_all | difference([_cur_path]))[-1], '') }}"

- name: Load current snapshot JSON
  delegate_to: localhost
  set_fact:
    _cur_json: "{{ lookup('file', _cur_path) | from_json }}"

- name: Load previous snapshot if available
  delegate_to: localhost
  set_fact:
    _prev_json: "{{ (_prev_path | length) > 0 | ternary(lookup('file', _prev_path) | from_json, {}) }}"

- name: Compute diffs (processes)
  delegate_to: localhost
  set_fact:
    proc_added: "{{ (_cur_json.processes | default([])) | difference(_prev_json.processes | default([])) }}"
    proc_removed: "{{ (_prev_json.processes | default([])) | difference(_cur_json.processes | default([])) }}"

- name: Compute diffs (listeners/services/crons)
  delegate_to: localhost
  set_fact:
    listen_added: "{{ (_cur_json.listeners | default([])) | difference(_prev_json.listeners | default([])) }}"
    listen_removed: "{{ (_prev_json.listeners | default([])) | difference(_cur_json.listeners | default([])) }}"
    svc_added: "{{ (_cur_json.services_running | default([])) | difference(_prev_json.services_running | default([])) }}"
    svc_removed: "{{ (_prev_json.services_running | default([])) | difference(_cur_json.services_running | default([])) }}"
    cron_diff: "{{ _cur_json.crontabs | default('') | difference(_prev_json.crontabs | default('')) if _prev_json != {} else '' }}"
  vars:
    # Jinja difference doesn't work on raw strings; keep for completeness
    difference: "{{ '' }}"

- name: Flag risk items
  delegate_to: localhost
  vars:
    _cpu_spikes: "{{ _cur_json.processes | select('search', ' [3-9][0-9]\\.|[1-9][0-9]{2,}\\. ') | list }}"
    _mem_spikes: "{{ _cur_json.processes | select('search', ' [2-9][0-9]\\. [^ ]* ') | list }}"
    _root_tmp: "{{ _cur_json.processes | select('search', '^root ') | select('search', '/tmp|/var/tmp') | list }}"
    _new_non_whitelist_listeners: >-
      {{
        listen_added | reject('search', '(:|\\s)(' ~ (allowed_listening_ports | join("|")) ~ ')(\\s|$)') | list
      }}
    _new_non_whitelist_procs: >-
      {{
        proc_added
        | reject('match', '(' ~ (allowed_process_globs | map('regex_escape') | join("|")) ~ ')')
        | list
      }}
  set_fact:
    risk_cpu: "{{ _cpu_spikes }}"
    risk_mem: "{{ _mem_spikes }}"
    risk_root_tmp: "{{ _root_tmp }}"
    risk_ports: "{{ _new_non_whitelist_listeners }}"
    risk_procs: "{{ _new_non_whitelist_procs }}"

- name: Prune old controller snapshots
  delegate_to: localhost
  find:
    paths: "{{ controller_snapshot_root }}/{{ inventory_hostname }}"
    patterns: "process_snapshot_*.json"
    age: "{{ retention_days }}d"
    age_stamp: mtime
  register: old_snaps

- name: Remove old files
  delegate_to: localhost
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_snaps.files }}"

- name: Render host HTML report
  delegate_to: localhost
  template:
    src: "host_report.html.j2"
    dest: "{{ controller_snapshot_root }}/{{ inventory_hostname }}/report_{{ ansible_date_time.iso8601_basic_short }}.html"
    mode: "0640"
  vars:
    cur: "{{ _cur_json }}"
    prev: "{{ _prev_json }}"
    added:
      processes: "{{ proc_added }}"
      listeners: "{{ listen_added }}"
      services: "{{ svc_added }}"
    removed:
      processes: "{{ proc_removed }}"
      listeners: "{{ listen_removed }}"
      services: "{{ svc_removed }}"
    risks:
      cpu: "{{ risk_cpu }}"
      mem: "{{ risk_mem }}"
      root_tmp: "{{ risk_root_tmp }}"
      ports: "{{ risk_ports }}"
      procs: "{{ risk_procs }}"
  register: rendered_report

- name: Set path to report for email
  delegate_to: localhost
  set_fact:
    host_report_path: "{{ rendered_report.dest }}"
